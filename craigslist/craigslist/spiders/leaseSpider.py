#from scrapy.selector import HtmlXPathSelectorfrom scrapy.spiders import CrawlSpiderfrom scrapy.http import Request, FormRequest#from scrapy import log#import json#import os#from urlparse import urljoinfrom scrapy.shell import inspect_responsefrom craigslist.items import LeaseItem#import lxml#import reimport loggingimport datetimeclass ContactSpider(CrawlSpider):    name = 'lease'    download_delay = 5    start_urls = [        'http://newyork.craigslist.org/search/mnh/hhh?query=lease',        #'http://auburn.craigslist.org/',    ]    #allowed_domains = ['craigslist.org']    cookie_num = 0    def parse(self, response):        #inspect_response(response, self)        #yield Request('http://newyork.craigslist.org/mnh/fee/5121064778.html', callback=self.parse_item)        #return        for sel in response.xpath('//div[@class="content"]/p[@class="row"]'): ###            tmp = sel.xpath('.//span[@class="pl"]/a/@href').extract()            if tmp:                #self.cookie_num += 1                yield Request(response.urljoin(tmp[0]), callback=self.parse_item)        #Crawl next page.        return ###        tmp = response.xpath('//span[contains(@class,"paginator")]//a[contains(@class,"next")]/@href').extract()        if tmp:            self.cookie_num += 1            yield Request(response.urljoin(tmp[0]), meta={'cookiejar':self.cookie_num}, callback=self.parse_search)    def parse_item(self, response):        #inspect_response(response, self)        #return        item = LeaseItem()        item['url'] = response.url        tmp = response.xpath('//*[@class="postingtitletext"]/text()').extract()        if tmp:            item['title'] = ''.join(tmp).strip()        tmp = response.xpath('//*[@class="price"]/text()').extract()        if tmp:            item['price'] = tmp[0]        tmp = response.xpath('//*[@id="postingbody"]/text()').extract()        if tmp:            item['body'] = ''.join(tmp).strip()        tmp = response.xpath('//*[@class="attrgroup"][1]/span[1]//text()').extract()        if tmp:            s = ''.join(tmp)            if 'B' in s:                item['bedrooms'] = s        tmp = response.xpath('//*[@class="postinginfo"]/text()').extract()        if tmp:            item['posting_id'] = tmp[0].replace('post id:','').strip()        tmp = response.xpath('//div[@class="postinginfos"]/p[contains(text(),"posted")]/time/text()').extract()        if tmp:            item['posting_time'] = tmp[0]        tmp = response.xpath('//div[@class="postinginfos"]/p[contains(text(),"updated")]/time/text()').extract()        if tmp:            item['posting_update'] = tmp[0]        return item